/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Groth16VerifierBase,
  Groth16VerifierBaseInterface,
} from "../../src/Groth16VerifierBase";

const _abi = [
  {
    inputs: [],
    name: "CommitmentInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611adb8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063b1c3a00e14610046578063d148354c14610071578063e33974a814610086575b600080fd5b610059610054366004611850565b610099565b60405161006893929190611899565b60405180910390f35b61008461007f36600461190d565b610122565b005b610084610094366004611969565b6105c4565b6100a16117b4565b6100a96117d2565b60006100be86358760015b6020020135610b2c565b83526100dc6060870135604088013560a089013560808a0135610c21565b602085015260408401526100f660c08701358760076100b4565b606084015261010885358660016100b4565b825261011784358560016100b4565b905093509350939050565b61012a6117d2565b6040805160028082526060808301845292602083019080368337019050509050602081016040848101823750604051600080516020611a868339815191529061017f908735906020808a0135918691016119c9565b6040516020818303038152906040528051906020012060001c6101a29190611a22565b8252604080516000918782377f211e4e4a8d918a0713db0a7f7b3881cbd4fb530106b2eeeef9b6a2def37b838560408201527f0581211531b4b26155c1440909f874871a4884a8cc6d7318c756ebd6f92d9d8960608201527f23e4263bdb7dae31b45b625db2c630e7d8377f84bf00fb25b7a6b21ded1ad98260808201527f044d47716e320bebbb2364aa60a049be5a7a068aa3852b48a091b25b92bc945f60a082015260408660c08301377f150af895ccbbc62fea1d9ac23322ee0231ba5d729c573746fa32300a8c3629296101008201527f1ee8202074e339786c8eac9d38fde4a12e569b977d36b27ce36ed521a881b0096101208201527f2a9d6bcbd408e8e2e7450020fefadd3d7d6c776dd5df00fa93b3acd9f4e9c14f6101408201527ee22982050ab74a2b58e88f8a3a5f7a20cecddd9c4bc12796724de17c57f9d76101608201526020816101808360085afa905116905080610317576040516351d49ff760e11b815260040160405180910390fd5b60008061034e86868a6002806020026040519081016040528092919082600260200280828437600092019190915250610f18915050565b915091506040516101008a82377f29da872e48126af96305ef70eb5b73433b9c1c36ac16fa350a07cbc4f62508a16101008201527f2bdcf4a6f99f7c8a7ade53d212f06e9a06837d6609c1694705a4725bc9679f216101208201527f12c38ae3c0d8b89d140f6ed18e7b911b7e1173d4b80ac594ff23eeda028d71dc6101408201527f10cc7bba2c19c761904630b6faf7248c60d9fcb8ff444a99a449ce233df489256101608201527f17b4b10dbbd2a05dfb674b5d892bc651d0a55976c1613fed3152cbb65027ad7e6101808201527f288814ea49b95ec9439bafc71bc9d31ec35ac5919873e842c9d942896f13f7976101a08201527f0ba9549a9c12c213ebaab06479cc14389071ec391dc95c71505e44cd1971384c6101c08201527f26ec031ca7378081a5cbb74bd4ec5732f1732a70ad92bd0605cdcc75e8b998916101e08201527f1b1b553a91179991d067e10bd0cf8b885409a4047b2eb59517546ddb1838bf096102008201527f030e010702a6fbcf1e569475d1dc21145bbb14774ba5d1ba757a76c961d74d7a61022082015282610240820152816102608201527f1426d4e62629bc57f7224b9d60b4e0b7f90564499e64888500f7580e1595e7c26102808201527f09994f7ae17b798cbf83aed008d5701464ffc51fd36fcd72d95c5e4f95b518f36102a08201527f2ba2ca8a61969c46ebe77da3ad9a13c7067d09f8c9acb79d7b6663819b78e0bc6102c08201527f0391592ac2691059d80aa6af263a979795ca2be05ea06ec818108f907dd351106102e08201526020816103008360085afa9051169250826105b957604051631ff3747d60e21b815260040160405180910390fd5b505050505050505050565b6105cc6117d2565b6105d46117f0565b6105dc61180e565b6105ed8660005b602002013561125e565b602084015282526000806106008761125e565b6040805160028082526060808301845294965092945091906020830190803683370190505090506020810160408881018237508451602080870151604051600080516020611a868339815191529361065d939092918691016119c9565b6040516020818303038152906040528051906020012060001c6106809190611a22565b865284518452602085810151858201527f211e4e4a8d918a0713db0a7f7b3881cbd4fb530106b2eeeef9b6a2def37b83856040808701919091527f0581211531b4b26155c1440909f874871a4884a8cc6d7318c756ebd6f92d9d8960608701527f23e4263bdb7dae31b45b625db2c630e7d8377f84bf00fb25b7a6b21ded1ad98260808701527f044d47716e320bebbb2364aa60a049be5a7a068aa3852b48a091b25b92bc945f60a087015260c0860185905260e086018490527f150af895ccbbc62fea1d9ac23322ee0231ba5d729c573746fa32300a8c3629296101008701527f1ee8202074e339786c8eac9d38fde4a12e569b977d36b27ce36ed521a881b0096101208701527f2a9d6bcbd408e8e2e7450020fefadd3d7d6c776dd5df00fa93b3acd9f4e9c14f6101408701527ee22982050ab74a2b58e88f8a3a5f7a20cecddd9c4bc12796724de17c57f9d761016087015251600091816101808860085afa905116905080610805576040516351d49ff760e11b815260040160405180910390fd5b50505050600080610822896000600481106105e3576105e36119b3565b9092509050600080808061083e60408e013560208f0135611304565b929650909450925090506000806108568f60036105e3565b915091506000806108688e8e8e610f18565b8b8d5260208d018b905260408d0189905260608d018a905260808d0187905260a08d0188905260c08d0186905260e08d018590527f29da872e48126af96305ef70eb5b73433b9c1c36ac16fa350a07cbc4f62508a16101008e01527f2bdcf4a6f99f7c8a7ade53d212f06e9a06837d6609c1694705a4725bc9679f216101208e01527f12c38ae3c0d8b89d140f6ed18e7b911b7e1173d4b80ac594ff23eeda028d71dc6101408e01527f10cc7bba2c19c761904630b6faf7248c60d9fcb8ff444a99a449ce233df489256101608e01527f17b4b10dbbd2a05dfb674b5d892bc651d0a55976c1613fed3152cbb65027ad7e6101808e01527f288814ea49b95ec9439bafc71bc9d31ec35ac5919873e842c9d942896f13f7976101a08e01527f0ba9549a9c12c213ebaab06479cc14389071ec391dc95c71505e44cd1971384c6101c08e01527f26ec031ca7378081a5cbb74bd4ec5732f1732a70ad92bd0605cdcc75e8b998916101e08e01527f1b1b553a91179991d067e10bd0cf8b885409a4047b2eb59517546ddb1838bf096102008e01527f030e010702a6fbcf1e569475d1dc21145bbb14774ba5d1ba757a76c961d74d7a6102208e01526102408d018290526102608d018190527f1426d4e62629bc57f7224b9d60b4e0b7f90564499e64888500f7580e1595e7c26102808e01527f09994f7ae17b798cbf83aed008d5701464ffc51fd36fcd72d95c5e4f95b518f36102a08e01527f2ba2ca8a61969c46ebe77da3ad9a13c7067d09f8c9acb79d7b6663819b78e0bc6102c08e01527f0391592ac2691059d80aa6af263a979795ca2be05ea06ec818108f907dd351106102e08e015290925090506000610add6117d2565b6020816103008f60085afa9150811580610af957508051600114155b15610b1757604051631ff3747d60e21b815260040160405180910390fd5b50505050505050505050505050505050505050565b6000600080516020611a6683398151915283101580610b595750600080516020611a668339815191528210155b15610b7757604051631ff3747d60e21b815260040160405180910390fd5b82158015610b83575081155b15610b9057506000610c1b565b6000610bcf600080516020611a668339815191526003600080516020611a6683398151915287600080516020611a66833981519152898a0909086114ea565b9050808303610be4575050600182901b610c1b565b610bed8161154e565b8303610c00575050600182811b17610c1b565b604051631ff3747d60e21b815260040160405180910390fd5b505b92915050565b600080600080516020611a6683398151915286101580610c4f5750600080516020611a668339815191528510155b80610c685750600080516020611a668339815191528410155b80610c815750600080516020611a668339815191528310155b15610c9f57604051631ff3747d60e21b815260040160405180910390fd5b82848688171717600003610cb857506000905080610f0f565b60008080600080516020611a66833981519152610ce46003600080516020611a66833981519152611a44565b600080516020611a668339815191528a8c090990506000600080516020611a668339815191528a600080516020611a668339815191528c8d090990506000600080516020611a668339815191528a600080516020611a668339815191528c8d09099050600080516020611a6683398151915280600080516020611a668339815191528c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089450610ddd600080516020611a6683398151915280600080516020611a668339815191528e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e7750861154e565b9350505050600080610e2e600080516020611a6683398151915280610e0457610e04611a0c565b600080516020611a66833981519152858609600080516020611a66833981519152878809086114ea565b9050610e7b600080516020611a668339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611a6683398151915284880809611567565b15915050610e8a8383836115b1565b90935091508683148015610e9d57508186145b15610ec75780610eae576000610eb1565b60025b60ff1660028a901b176000179450879350610f0b565b610ed08361154e565b87148015610ee55750610ee28261154e565b86145b15610c005780610ef6576000610ef9565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b6000806000600190506040516040810160007f02cbd1596aacebc7c101eb5c580ccc6cb56b9c839750990ab2d4f76ff79747f383527f19f49ac4a7828f12fc6952eb61fa59a7dc5ef78b836416de6de8dbede2746c476020840152865182526020870151602083015260408360808560065afa841693507f2c89387e82aa74c5f20f41dd12a6065817915abba131f8fee1d2647c30909a4982527f12b810580955c65a89d61835f18405dfb50416e35211d84524028bd2508ac879602083015288359050806040830152600080516020611a8683398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f2923a5b175c4518620c02d384d93a5b24690da2da33cf861e6fe4f731b8c5ab582527f014b1075d5d14ea370b80dd26bbad1f9ef3a481bb77142f18cd9d7b1344fae32602083015260208901359050806040830152600080516020611a8683398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f239020e346119af73f5f84f16841885a1f8b8f0da00cac95d3f357a1b3994a2382527f089a617bcb3f783933baf633f2726828eb12d4d102e9bfacc267e6fdc2d2e277602083015260408901359050806040830152600080516020611a8683398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f1a0846e5ec7bc1842503dd2970fb85f9f28e041b5f34f48040bfad00c594cf9982527f2015bc90c3f873389b3bcc77a8ac093e1cc27b1e9ae14c99d38c69617759e293602083015260608901359050806040830152600080516020611a8683398151915281108416935060408260608460075afa8416935060408360808560065afa7f27aa18e2691bd95561e006a1fc6e43312d118a9fbd576dfe9e2900ba1c4605b583527f25aeb0fdfcd8d5b33cb2796c1c57ab5369caa79000cece5cbfc4e86c28915766602084015288516040808501829052600080516020611a8683398151915290911091909516169390508160608160075afa831692505060408160808360065afa815160209092015191945090925016806112555760405163a54f8e2760e01b815260040160405180910390fd5b50935093915050565b6000808260000361127457506000928392509050565b600183811c925080841614600080516020611a6683398151915283106112ad57604051631ff3747d60e21b815260040160405180910390fd5b6112ea600080516020611a668339815191526003600080516020611a6683398151915286600080516020611a6683398151915288890909086114ea565b915080156112fe576112fb8261154e565b91505b50915091565b600080808085158015611315575084155b1561132b575060009250829150819050806114e1565b600286811c94508593506001808816149080881614600080516020611a668339815191528610158061136b5750600080516020611a668339815191528510155b1561138957604051631ff3747d60e21b815260040160405180910390fd5b6000600080516020611a668339815191526113b36003600080516020611a66833981519152611a44565b600080516020611a66833981519152888a090990506000600080516020611a6683398151915288600080516020611a668339815191528a8b090990506000600080516020611a6683398151915288600080516020611a668339815191528a8b09099050600080516020611a6683398151915280600080516020611a668339815191528a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e50896506114ac600080516020611a6683398151915280600080516020611a668339815191528c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e7750861154e565b95506114b98787866115b1565b909750955084156114db576114cd8761154e565b96506114d88661154e565b95505b50505050505b92959194509250565b6000611516827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526116ef565b905081600080516020611a668339815191528283091461154957604051631ff3747d60e21b815260040160405180910390fd5b919050565b600080516020611a668339815191529081900681030690565b600080611594837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526116ef565b905082600080516020611a66833981519152828309149392505050565b600080806115e3600080516020611a6683398151915280878809600080516020611a66833981519152898a09086114ea565b905083156115f7576115f48161154e565b90505b611642600080516020611a668339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611a66833981519152848a08096114ea565b9250600080516020611a6683398151915261166e600080516020611a6683398151915260028609611754565b86099150600080516020611a6683398151915261169b600080516020611a6683398151915284850961154e565b600080516020611a6683398151915285860908861415806116d15750600080516020611a66833981519152808385096002098514155b1561125557604051631ff3747d60e21b815260040160405180910390fd5b6000806040516020815260208082015260206040820152846060820152836080820152600080516020611a6683398151915260a082015260208160c08360055afa90519250905080610c1957604051631ff3747d60e21b815260040160405180910390fd5b6000611780827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd456116ef565b9050600080516020611a6683398151915281830960011461154957604051631ff3747d60e21b815260040160405180910390fd5b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b806101008101831015610c1b57600080fd5b8060408101831015610c1b57600080fd5b6000806000610180848603121561186657600080fd5b611870858561182d565b925061188085610100860161183f565b915061189085610140860161183f565b90509250925092565b60c08101818560005b60048110156118c15781518352602092830192909101906001016118a2565b505050608082018460005b60018110156118eb5781518352602092830192909101906001016118cc565b5050508260a0830152949350505050565b8060808101831015610c1b57600080fd5b600080600080610200858703121561192457600080fd5b61192e868661182d565b935061193e86610100870161183f565b925061194e86610140870161183f565b915061195e8661018087016118fc565b905092959194509250565b600080600080610140858703121561198057600080fd5b61198a86866118fc565b935060a085018681111561199d57600080fd5b60808601935035915061195e8660c087016118fc565b634e487b7160e01b600052603260045260246000fd5b83815282602082015260006040820183516020850160005b828110156119ff5781518452602093840193909101906001016119e1565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082611a3f57634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610c1b57634e487b7160e01b600052601160045260246000fdfe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212205d628ca1c6c70946be72733e701595ae64cf7ebdf163da6a5d2c6c009d5e443164736f6c634300081c0033";

type Groth16VerifierBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Groth16VerifierBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Groth16VerifierBase__factory extends ContractFactory {
  constructor(...args: Groth16VerifierBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Groth16VerifierBase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): Groth16VerifierBase__factory {
    return super.connect(runner) as Groth16VerifierBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Groth16VerifierBaseInterface {
    return new Interface(_abi) as Groth16VerifierBaseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Groth16VerifierBase {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as Groth16VerifierBase;
  }
}
