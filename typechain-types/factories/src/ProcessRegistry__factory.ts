/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProcessRegistry,
  ProcessRegistryInterface,
} from "../../src/ProcessRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensus",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOrganizationAdministrator",
    type: "error",
  },
  {
    inputs: [],
    name: "OrganizationNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "censusRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "censusURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVotes",
        type: "uint256",
      },
    ],
    name: "CensusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ProcessCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "ProcessDurationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newStateRoot",
        type: "uint256",
      },
    ],
    name: "ProcessStateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProcessStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_CENSUS_ORIGIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_STATUS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
    ],
    name: "getProcess",
    outputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "organizationID",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "latestStateRoot",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteOverwriteCount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_chainID",
        type: "string",
      },
      {
        internalType: "address",
        name: "_organizationRegistryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        internalType: "address",
        name: "organizationID",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "initStateRoot",
        type: "uint256",
      },
    ],
    name: "newProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "organizationRegistryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processes",
    outputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "organizationID",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "latestStateRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteOverwriteCount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    name: "setProcessCensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setProcessDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "results",
        type: "uint256[]",
      },
    ],
    name: "setProcessResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "setProcessStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "submitStateTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015601357600080fd5b506080516128cb61003d600039600081816117650152818161178e01526118cf01526128cb6000f3fe60806040526004361061012a5760003560e01c8063848df540116100ab578063ad3cb1cc1161006f578063ad3cb1cc1461037a578063adc879e9146103b8578063b79938e9146103cd578063c718c01f146103ed578063d71d072e1461040d578063f2fde38b1461042d57600080fd5b8063848df5401461028c5780638da5cb5b146102c557806392bc266914610302578063992bc45b14610322578063ac64bd031461035a57600080fd5b806352d1902d116100f257806352d1902d146101ff57806356a6f1e2146102225780636bae04ea14610242578063715018a61461026257806372c628ef1461027757600080fd5b806302cc919a1461012f5780630535fece1461015b5780632b7ac3f314610192578063463fd1af146101ca5780634f1ef286146101ec575b600080fd5b34801561013b57600080fd5b50610144600981565b60405160ff90911681526020015b60405180910390f35b34801561016757600080fd5b5061017b610176366004611c04565b61044d565b6040516101529b9a99989796959493929190611d44565b34801561019e57600080fd5b506003546101b2906001600160a01b031681565b6040516001600160a01b039091168152602001610152565b3480156101d657600080fd5b506101ea6101e5366004611e43565b61068f565b005b6101ea6101fa366004611eed565b6107e6565b34801561020b57600080fd5b50610214610805565b604051908152602001610152565b34801561022e57600080fd5b506101ea61023d366004611fa5565b610822565b34801561024e57600080fd5b506101ea61025d366004611fe9565b6109f1565b34801561026e57600080fd5b506101ea610c1e565b34801561028357600080fd5b50610144600481565b34801561029857600080fd5b506001546102b090600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610152565b3480156102d157600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166101b2565b34801561030e57600080fd5b506101ea61031d366004612054565b610c32565b34801561032e57600080fd5b5061034261033d366004611c04565b610f7f565b6040516101529c9b9a99989796959493929190612139565b34801561036657600080fd5b506101ea61037536600461221a565b505050565b34801561038657600080fd5b506103ab604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101529190612299565b3480156103c457600080fd5b506103ab611385565b3480156103d957600080fd5b506001546101b2906001600160a01b031681565b3480156103f957600080fd5b506101ea6104083660046122ac565b611413565b34801561041957600080fd5b506101ea6104283660046122ce565b611593565b34801561043957600080fd5b506101ea61044836600461234b565b6116fe565b6000602081815291815260409081902080548251808401909352600182015483526002820154938301939093526003810154600582015460068301546007840154600885015460098601805460ff8a169961010090046001600160a01b0316989791906104b990612366565b80601f01602080910402602001604051908101604052809291908181526020018280546104e590612366565b80156105325780601f1061050757610100808354040283529160200191610532565b820191906000526020600020905b81548152906001019060200180831161051557829003601f168201915b5050604080516101008082018352600a88015460ff808216151584529181048216151560208401526201000081048216838501526301000000900481166060830152600b880154608080840191909152600c89015460a0840152600d89015460c0840152600e89015460e08401528351908101909352600f880180549798929792965092945091925083911660098111156105cf576105cf611c1d565b60098111156105e0576105e0611c1d565b8152602001600182015481526020016002820154815260200160038201805461060890612366565b80601f016020809104026020016040519081016040528092919081815260200182805461063490612366565b80156106815780601f1061065657610100808354040283529160200191610681565b820191906000526020600020905b81548152906001019060200180831161066457829003601f168201915b50505050508152505090508b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156106d45750825b90506000826001600160401b031660011480156106f05750303b155b9050811580156106fe575080155b1561071c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561074657845460ff60401b1916600160401b1785555b61074f33611741565b610757611752565b6002610764898b836123e8565b50600180546001600160a01b03808a166001600160a01b031992831617909255600380549289169290911691909117905583156107db57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b6107ee61175a565b6107f7826117ff565b6108018282611807565b5050565b600061080f6118c4565b5060008051602061287683398151915290565b6000828152602081905260409020805461010090046001600160a01b03168061085e57604051634d36eb6960e01b815260040160405180910390fd5b815460ff1680600481111561087557610875611c1d565b84600481111561088757610887611c1d565b14806108a65750600484818111156108a1576108a1611c1d565b60ff16115b806108e0575060008160048111156108c0576108c0611c1d565b141580156108e0575060038160048111156108dd576108dd611c1d565b14155b156108fe576040516307a92f1960e51b815260040160405180910390fd5b60015460405163c1af6e0360e01b81526001600160a01b0384811660048301523360248301529091169063c1af6e0390604401602060405180830381865afa15801561094e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097291906124b5565b61098f5760405163f8b857d360e01b815260040160405180910390fd5b82548490849060ff191660018360048111156109ad576109ad611c1d565b0217905550847fac0c4085a30bc70d0d8893ee5d6466ac9c5f03e27fd7292dcef128a610e7c190856040516109e291906124d2565b60405180910390a25050505050565b6109fe60608201826124e0565b9050600003610a205760405163111127cb60e01b815260040160405180910390fd5b6040810135600003610a455760405163111127cb60e01b815260040160405180910390fd5b6000828152602081905260409020805461010090046001600160a01b031680610a8157604051634d36eb6960e01b815260040160405180910390fd5b60015460405163c1af6e0360e01b81526001600160a01b0383811660048301523360248301529091169063c1af6e0390604401602060405180830381865afa158015610ad1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af591906124b5565b610b125760405163f8b857d360e01b815260040160405180910390fd5b601082015460208401351015610b3b5760405163111127cb60e01b815260040160405180910390fd5b6000825460ff166004811115610b5357610b53611c1d565b14158015610b7757506003825460ff166004811115610b7457610b74611c1d565b14155b15610b95576040516307a92f1960e51b815260040160405180910390fd5b6020830135601083015560408301356011830155610bb660608401846124e0565b6012840191610bc69190836123e8565b50837f35947a8913e2156f19b018078c9f0667e49cb3dc24af3434a4d0b16b82675b1b6040850135610bfb60608701876124e0565b8760200135604051610c10949392919061254f565b60405180910390a250505050565b610c2661190d565b610c306000611968565b565b60015460405163c1af6e0360e01b81526001600160a01b0386811660048301523360248301529091169063c1af6e0390604401602060405180830381865afa158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca691906124b5565b610cc35760405163f8b857d360e01b815260040160405180910390fd5b6000838152602081905260409020805461010090046001600160a01b031615610cff57604051635040c4d360e11b815260040160405180910390fd5b610d0f60608a0160408b01612589565b60ff16600003610d325760405163ac38930b60e01b815260040160405180910390fd5b610d4260608a0160408b01612589565b60ff16896080013511610d685760405163b1911d8b60e01b815260040160405180910390fd5b60048c81811115610d7b57610d7b611c1d565b60ff161180610db9575060008c6004811115610d9957610d99611c1d565b14158015610db9575060038c6004811115610db657610db6611c1d565b14155b15610dd7576040516307a92f1960e51b815260040160405180910390fd5b42808c11610df857604051632ca4094f60e21b815260040160405180910390fd5b80610e038c8e6125bc565b11610e2157604051637616640160e01b815260040160405180910390fd5b6009610e3060208b018b6125dc565b6009811115610e4157610e41611c1d565b60ff161115610e635760405163111127cb60e01b815260040160405180910390fd5b81548d90839060ff19166001836004811115610e8157610e81611c1d565b0217905550600582018c9055600682018b90558154610100600160a81b0319166101006001600160a01b0388160217825583356001830155602084013560028301556003820183905560098201610ed9888a836123e8565b5089600a8301610ee98282612613565b50899050600f8301610efb82826126d5565b505060018054600160a01b900463ffffffff16906014610f1a8361276c565b91906101000a81548163ffffffff021916908363ffffffff16021790555050336001600160a01b0316857fada6f87a2a16a0c9c169ca36754c5f33f7c1a973b575d068f888a549ed4faefa60405160405180910390a350505050505050505050505050565b600080610f9f604051806040016040528060008152602001600081525090565b600060606000806000806060610ffd604051806101000160405280600015158152602001600015158152602001600060ff168152602001600060ff168152602001600081526020016000815260200160008152602001600081525090565b61102760408051608081019091528060008152600060208201819052604082015260609081015290565b60008d815260208190526040808220815161018081019092528054829060ff16600481111561105857611058611c1d565b600481111561106957611069611c1d565b8152815461010090046001600160a01b031660208083019190915260408051808201825260018501548152600285015481840152818401526003840154606084015260048401805482518185028101850190935280835260809094019391929091908301828280156110fa57602002820191906000526020600020905b8154815260200190600101908083116110e6575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201805461113b90612366565b80601f016020809104026020016040519081016040528092919081815260200182805461116790612366565b80156111b45780601f10611189576101008083540402835291602001916111b4565b820191906000526020600020905b81548152906001019060200180831161119757829003601f168201915b5050509183525050604080516101008082018352600a85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600b860154608080850191909152600c87015460a0850152600d87015460c0850152600e87015460e08501529085019290925282519182018352600f8501805493909401939192839116600981111561125c5761125c611c1d565b600981111561126d5761126d611c1d565b8152602001600182015481526020016002820154815260200160038201805461129590612366565b80601f01602080910402602001604051908101604052809291908181526020018280546112c190612366565b801561130e5780601f106112e35761010080835404028352916020019161130e565b820191906000526020600020905b8154815290600101906020018083116112f157829003601f168201915b505050505081525050815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001518a61014001518b61016001519c509c509c509c509c509c509c509c509c509c509c509c505091939597999b5091939597999b565b6002805461139290612366565b80601f01602080910402602001604051908101604052809291908181526020018280546113be90612366565b801561140b5780601f106113e05761010080835404028352916020019161140b565b820191906000526020600020905b8154815290600101906020018083116113ee57829003601f168201915b505050505081565b42811161143357604051637616640160e01b815260040160405180910390fd5b6000828152602081905260409020805461010090046001600160a01b03168061146f57604051634d36eb6960e01b815260040160405180910390fd5b60015460405163c1af6e0360e01b81526001600160a01b0383811660048301523360248301529091169063c1af6e0390604401602060405180830381865afa1580156114bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e391906124b5565b6115005760405163f8b857d360e01b815260040160405180910390fd5b6000825460ff16600481111561151857611518611c1d565b1415801561153c57506003825460ff16600481111561153957611539611c1d565b14155b1561155a576040516307a92f1960e51b815260040160405180910390fd5b6006820183905560405183815284907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f4690602001610c10565b6000858152602081905260409020805461010090046001600160a01b03166115ce57604051634d36eb6960e01b815260040160405180910390fd5b6000815460ff1660048111156115e6576115e6611c1d565b14611604576040516307a92f1960e51b815260040160405180910390fd5b600354604051635c73957b60e11b81526001600160a01b039091169063b8e72af69061163a908890889088908890600401612791565b60006040518083038186803b15801561165257600080fd5b505afa158015611666573d6000803e3d6000fd5b506000925061167a915050838501856127c3565b60038301548151919250146116a257604051630b6fac0360e41b815260040160405180910390fd5b602080820151600384018190556040808401516007860155606084015160088601555190815288917fd25cbd3fa66107efb1230dc4f49f939d7b6b57ba10ab0ec87ba39040c075cf20910160405180910390a250505050505050565b61170661190d565b6001600160a01b03811661173557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61173e81611968565b50565b6117496119d9565b61173e81611a22565b610c306119d9565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806117e157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166117d5600080516020612876833981519152546001600160a01b031690565b6001600160a01b031614155b15610c305760405163703e46dd60e11b815260040160405180910390fd5b61173e61190d565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611861575060408051601f3d908101601f1916820190925261185e91810190612840565b60015b61188957604051634c9c8ce360e01b81526001600160a01b038316600482015260240161172c565b60008051602061287683398151915281146118ba57604051632a87526960e21b81526004810182905260240161172c565b6103758383611a2a565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c305760405163703e46dd60e11b815260040160405180910390fd5b3361193f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610c305760405163118cdaa760e01b815233600482015260240161172c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610c3057604051631afcd79f60e31b815260040160405180910390fd5b6117066119d9565b611a3382611a80565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611a78576103758282611ae5565b610801611b5d565b806001600160a01b03163b600003611ab657604051634c9c8ce360e01b81526001600160a01b038216600482015260240161172c565b60008051602061287683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051611b029190612859565b600060405180830381855af49150503d8060008114611b3d576040519150601f19603f3d011682016040523d82523d6000602084013e611b42565b606091505b5091509150611b52858383611b7c565b925050505b92915050565b3415610c305760405163b398979f60e01b815260040160405180910390fd5b606082611b9157611b8c82611bdb565b611bd4565b8151158015611ba857506001600160a01b0384163b155b15611bd157604051639996b31560e01b81526001600160a01b038516600482015260240161172c565b50805b9392505050565b805115611beb5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b600060208284031215611c1657600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60058110611c4357611c43611c1d565b9052565b60005b83811015611c62578181015183820152602001611c4a565b50506000910152565b60008151808452611c83816020860160208601611c47565b601f01601f19169290920160200192915050565b80511515825260208101511515602083015260ff60408201511660408301526060810151611cca606084018260ff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b60008151600a8110611d0b57611d0b611c1d565b808452506020820151602084015260408201516040840152606082015160806060850152611d3c6080850182611c6b565b949350505050565b611d4e818d611c33565b6001600160a01b038b166020820152611d74604082018b80518252602090810151910152565b8860808201528760a08201528660c08201528560e0820152846101008201526102606101208201526000611dac610260830186611c6b565b611dba610140840186611c97565b828103610240840152611dcd8185611cf7565b9e9d5050505050505050505050505050565b60008083601f840112611df157600080fd5b5081356001600160401b03811115611e0857600080fd5b602083019150836020828501011115611e2057600080fd5b9250929050565b80356001600160a01b0381168114611e3e57600080fd5b919050565b60008060008060608587031215611e5957600080fd5b84356001600160401b03811115611e6f57600080fd5b611e7b87828801611ddf565b9095509350611e8e905060208601611e27565b9150611e9c60408601611e27565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ee557611ee5611ea7565b604052919050565b60008060408385031215611f0057600080fd5b611f0983611e27565b915060208301356001600160401b03811115611f2457600080fd5b8301601f81018513611f3557600080fd5b80356001600160401b03811115611f4e57611f4e611ea7565b611f61601f8201601f1916602001611ebd565b818152866020838501011115611f7657600080fd5b816020840160208301376000602083830101528093505050509250929050565b803560058110611e3e57600080fd5b60008060408385031215611fb857600080fd5b82359150611fc860208401611f96565b90509250929050565b600060808284031215611fe357600080fd5b50919050565b60008060408385031215611ffc57600080fd5b8235915060208301356001600160401b0381111561201957600080fd5b61202585828601611fd1565b9150509250929050565b60006101008284031215611fe357600080fd5b600060408284031215611fe357600080fd5b60008060008060008060008060008060006102408c8e03121561207657600080fd5b61207f8c611f96565b9a5060208c0135995060408c0135985061209c8d60608e0161202f565b97506101608c01356001600160401b038111156120b857600080fd5b6120c48e828f01611fd1565b9750506101808c01356001600160401b038111156120e157600080fd5b6120ed8e828f01611ddf565b909750955061210190506101a08d01611e27565b93506101c08c013592506121198d6101e08e01612042565b915060006102208d01359050809150509295989b509295989b9093969950565b612143818e611c33565b6001600160a01b038c166020820152612169604082018c80518252602090810151910152565b89608082015261028060a08201526000610280820160008b5180835260208301925060208d0160005b828110156121b0578151855260209485019490910190600101612192565b505050819050508960c08401528860e084015287610100840152866101208401528281036101408401526121e48187611c6b565b90506121f4610160840186611c97565b8281036102608401526122078185611cf7565b9f9e505050505050505050505050505050565b60008060006040848603121561222f57600080fd5b8335925060208401356001600160401b0381111561224c57600080fd5b8401601f8101861361225d57600080fd5b80356001600160401b0381111561227357600080fd5b8660208260051b840101111561228857600080fd5b939660209190910195509293505050565b602081526000611bd46020830184611c6b565b600080604083850312156122bf57600080fd5b50508035926020909101359150565b6000806000806000606086880312156122e657600080fd5b8535945060208601356001600160401b0381111561230357600080fd5b61230f88828901611ddf565b90955093505060408601356001600160401b0381111561232e57600080fd5b61233a88828901611ddf565b969995985093965092949392505050565b60006020828403121561235d57600080fd5b611bd482611e27565b600181811c9082168061237a57607f821691505b602082108103611fe357634e487b7160e01b600052602260045260246000fd5b601f82111561037557806000526020600020601f840160051c810160208510156123c15750805b601f840160051c820191505b818110156123e157600081556001016123cd565b5050505050565b6001600160401b038311156123ff576123ff611ea7565b6124138361240d8354612366565b8361239a565b6000601f841160018114612447576000851561242f5750838201355b600019600387901b1c1916600186901b1783556123e1565b600083815260209020601f19861690835b828110156124785786850135825560209485019460019092019101612458565b50868210156124955760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b801515811461173e57600080fd5b6000602082840312156124c757600080fd5b8151611bd4816124a7565b60208101611b578284611c33565b6000808335601e198436030181126124f757600080fd5b8301803591506001600160401b0382111561251157600080fd5b602001915036819003821315611e2057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b848152606060208201526000612569606083018587612526565b905082604083015295945050505050565b60ff8116811461173e57600080fd5b60006020828403121561259b57600080fd5b8135611bd48161257a565b634e487b7160e01b600052601160045260246000fd5b80820180821115611b5757611b576125a6565b600a811061173e57600080fd5b6000602082840312156125ee57600080fd5b8135611bd4816125cf565b60008135611b57816124a7565b60008135611b578161257a565b813561261e816124a7565b815490151560ff1660ff199190911617815561265961263f602084016125f9565b82805461ff00191691151560081b61ff0016919091179055565b61268061266860408401612606565b825462ff0000191660109190911b62ff000016178255565b6126a961268f60608401612606565b825463ff000000191660189190911b63ff00000016178255565b6080820135600182015560a0820135600282015560c0820135600382015560e090910135600490910155565b81356126e0816125cf565b600a81106126f0576126f0611c1d565b815460ff191660ff9190911617815560208201356001820155604082013560028201556060820135601e193684900301811261272b57600080fd5b820180356001600160401b0381111561274357600080fd5b60208201915080360382131561275857600080fd5b6127668183600386016123e8565b50505050565b600063ffffffff821663ffffffff8103612788576127886125a6565b60010192915050565b6040815260006127a5604083018688612526565b82810360208401526127b8818587612526565b979650505050505050565b6000608082840312156127d557600080fd5b82601f8301126127e457600080fd5b604051608081016001600160401b038111828210171561280657612806611ea7565b60405280608084018581111561281b57600080fd5b845b8181101561283557803583526020928301920161281d565b509195945050505050565b60006020828403121561285257600080fd5b5051919050565b6000825161286b818460208701611c47565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212203a74e8a51b3805b3d9065aa9187f4e32c1bd0fffe2ca1f6c0c735f1aa5d04f7e64736f6c634300081c0033";

type ProcessRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProcessRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProcessRegistry__factory extends ContractFactory {
  constructor(...args: ProcessRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ProcessRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProcessRegistry__factory {
    return super.connect(runner) as ProcessRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProcessRegistryInterface {
    return new Interface(_abi) as ProcessRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProcessRegistry {
    return new Contract(address, _abi, runner) as unknown as ProcessRegistry;
  }
}
