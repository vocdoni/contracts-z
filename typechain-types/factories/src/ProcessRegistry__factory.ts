/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProcessRegistry,
  ProcessRegistryInterface,
} from "../../src/ProcessRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensus",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOrganizationAdministrator",
    type: "error",
  },
  {
    inputs: [],
    name: "OrganizationNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "censusRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "censusURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVotes",
        type: "uint256",
      },
    ],
    name: "CensusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ProcessCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "ProcessDurationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newStateRoot",
        type: "uint256",
      },
    ],
    name: "ProcessStateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProcessStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_CENSUS_ORIGIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_STATUS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcess",
    outputs: [
      {
        components: [
          {
            internalType: "enum IProcessRegistry.ProcessStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "organizationId",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.EncryptionKey",
            name: "encryptionKey",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "latestStateRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "result",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteOverwriteCount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "costFromWeight",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "forceUniqueness",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "maxCount",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "costExponent",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxTotalCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minTotalCost",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.BallotMode",
            name: "ballotMode",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IProcessRegistry.CensusOrigin",
                name: "censusOrigin",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "censusRoot",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "censusURI",
                type: "string",
              },
            ],
            internalType: "struct IProcessRegistry.Census",
            name: "census",
            type: "tuple",
          },
        ],
        internalType: "struct IProcessRegistry.Process",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_chainID",
        type: "string",
      },
      {
        internalType: "address",
        name: "_organizationRegistryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "initStateRoot",
        type: "uint256",
      },
    ],
    name: "newProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "organizationRegistryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processes",
    outputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "latestStateRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteOverwriteCount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    name: "setProcessCensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setProcessDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "results",
        type: "uint256[]",
      },
    ],
    name: "setProcessResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "setProcessStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "submitStateTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015601357600080fd5b506080516129c261003d600039600081816117240152818161174d015261188e01526129c26000f3fe6080604052600436106101355760003560e01c8063848df540116100ab578063ad3cb1cc1161006f578063ad3cb1cc1461038f578063adc879e9146103cd578063b79938e9146103e2578063c718c01f14610402578063d71d072e14610422578063f2fde38b1461044257600080fd5b8063848df540146102ac5780638da5cb5b146102e557806392bc266914610322578063992bc45b14610342578063ac64bd031461036f57600080fd5b806352d1902d116100fd57806352d1902d1461020a57806356a6f1e21461022d5780636bae04ea1461024d578063715018a61461026d57806372c628ef146102825780637d2323541461029757600080fd5b806302cc919a1461013a5780630535fece146101665780632b7ac3f31461019d578063463fd1af146101d55780634f1ef286146101f7575b600080fd5b34801561014657600080fd5b5061014f600981565b60405160ff90911681526020015b60405180910390f35b34801561017257600080fd5b50610186610181366004611cb5565b610462565b60405161015d9b9a99989796959493929190611df5565b3480156101a957600080fd5b506003546101bd906001600160a01b031681565b6040516001600160a01b03909116815260200161015d565b3480156101e157600080fd5b506101f56101f0366004611ef4565b6106a4565b005b6101f5610205366004611f9e565b6107fb565b34801561021657600080fd5b5061021f61081a565b60405190815260200161015d565b34801561023957600080fd5b506101f5610248366004612056565b610837565b34801561025957600080fd5b506101f561026836600461209a565b610a06565b34801561027957600080fd5b506101f5610c33565b34801561028e57600080fd5b5061014f600481565b3480156102a357600080fd5b5061021f610c47565b3480156102b857600080fd5b506001546102d090600160a01b900463ffffffff1681565b60405163ffffffff909116815260200161015d565b3480156102f157600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166101bd565b34801561032e57600080fd5b506101f561033d366004612105565b610cba565b34801561034e57600080fd5b5061036261035d366004611cb5565b611015565b60405161015d9190612226565b34801561037b57600080fd5b506101f561038a366004612311565b505050565b34801561039b57600080fd5b506103c0604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161015d9190612390565b3480156103d957600080fd5b506103c0611318565b3480156103ee57600080fd5b506001546101bd906001600160a01b031681565b34801561040e57600080fd5b506101f561041d3660046123a3565b6113a6565b34801561042e57600080fd5b506101f561043d3660046123c5565b611526565b34801561044e57600080fd5b506101f561045d366004612442565b6116bd565b6000602081815291815260409081902080548251808401909352600182015483526002820154938301939093526003810154600582015460068301546007840154600885015460098601805460ff8a169961010090046001600160a01b0316989791906104ce9061245d565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa9061245d565b80156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b5050604080516101008082018352600a88015460ff808216151584529181048216151560208401526201000081048216838501526301000000900481166060830152600b880154608080840191909152600c89015460a0840152600d89015460c0840152600e89015460e08401528351908101909352600f880180549798929792965092945091925083911660098111156105e4576105e4611cce565b60098111156105f5576105f5611cce565b8152602001600182015481526020016002820154815260200160038201805461061d9061245d565b80601f01602080910402602001604051908101604052809291908181526020018280546106499061245d565b80156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b50505050508152505090508b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156106e95750825b90506000826001600160401b031660011480156107055750303b155b905081158015610713575080155b156107315760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561075b57845460ff60401b1916600160401b1785555b61076433611700565b61076c611711565b6002610779898b836124df565b50600180546001600160a01b03808a166001600160a01b031992831617909255600380549289169290911691909117905583156107f057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b610803611719565b61080c826117be565b61081682826117c6565b5050565b6000610824611883565b5060008051602061296d83398151915290565b6000828152602081905260409020805461010090046001600160a01b03168061087357604051634d36eb6960e01b815260040160405180910390fd5b815460ff1680600481111561088a5761088a611cce565b84600481111561089c5761089c611cce565b14806108bb5750600484818111156108b6576108b6611cce565b60ff16115b806108f5575060008160048111156108d5576108d5611cce565b141580156108f5575060038160048111156108f2576108f2611cce565b14155b15610913576040516307a92f1960e51b815260040160405180910390fd5b60015460405163c1af6e0360e01b81526001600160a01b0384811660048301523360248301529091169063c1af6e0390604401602060405180830381865afa158015610963573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098791906125ac565b6109a45760405163f8b857d360e01b815260040160405180910390fd5b82548490849060ff191660018360048111156109c2576109c2611cce565b0217905550847fac0c4085a30bc70d0d8893ee5d6466ac9c5f03e27fd7292dcef128a610e7c190856040516109f791906125c9565b60405180910390a25050505050565b610a1360608201826125d7565b9050600003610a355760405163111127cb60e01b815260040160405180910390fd5b6040810135600003610a5a5760405163111127cb60e01b815260040160405180910390fd5b6000828152602081905260409020805461010090046001600160a01b031680610a9657604051634d36eb6960e01b815260040160405180910390fd5b60015460405163c1af6e0360e01b81526001600160a01b0383811660048301523360248301529091169063c1af6e0390604401602060405180830381865afa158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a91906125ac565b610b275760405163f8b857d360e01b815260040160405180910390fd5b601082015460208401351015610b505760405163111127cb60e01b815260040160405180910390fd5b6000825460ff166004811115610b6857610b68611cce565b14158015610b8c57506003825460ff166004811115610b8957610b89611cce565b14155b15610baa576040516307a92f1960e51b815260040160405180910390fd5b6020830135601083015560408301356011830155610bcb60608401846125d7565b6012840191610bdb9190836124df565b50837f35947a8913e2156f19b018078c9f0667e49cb3dc24af3434a4d0b16b82675b1b6040850135610c1060608701876125d7565b8760200135604051610c259493929190612646565b60405180910390a250505050565b610c3b6118cc565b610c456000611927565b565b6003546040805163233ace1160e01b815290516000926001600160a01b03169163233ace119160048083019260209291908290030181865afa158015610c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb59190612671565b905090565b60015460405163c1af6e0360e01b81526001600160a01b0386811660048301523360248301529091169063c1af6e0390604401602060405180830381865afa158015610d0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2e91906125ac565b610d4b5760405163f8b857d360e01b815260040160405180910390fd5b6000838152602081905260409020805461010090046001600160a01b031615610d8757604051635040c4d360e11b815260040160405180910390fd5b610d9760608a0160408b01612699565b60ff16600003610dba5760405163ac38930b60e01b815260040160405180910390fd5b610dca60608a0160408b01612699565b60ff16896080013511610df05760405163b1911d8b60e01b815260040160405180910390fd5b60048c81811115610e0357610e03611cce565b60ff161180610e41575060008c6004811115610e2157610e21611cce565b14158015610e41575060038c6004811115610e3e57610e3e611cce565b14155b15610e5f576040516307a92f1960e51b815260040160405180910390fd5b4260008c9003610e6d57809b505b808c1015610e8e57604051632ca4094f60e21b815260040160405180910390fd5b80610e998c8e6126cc565b11610eb757604051637616640160e01b815260040160405180910390fd5b6009610ec660208b018b6126ec565b6009811115610ed757610ed7611cce565b60ff161115610ef95760405163111127cb60e01b815260040160405180910390fd5b81548d90839060ff19166001836004811115610f1757610f17611cce565b0217905550600582018c9055600682018b90558154610100600160a81b0319166101006001600160a01b0388160217825583356001830155602084013560028301556003820183905560098201610f6f888a836124df565b5089600a8301610f7f8282612723565b50899050600f8301610f9182826127e5565b505060018054600160a01b900463ffffffff16906014610fb08361287c565b91906101000a81548163ffffffff021916908363ffffffff16021790555050336001600160a01b0316857fada6f87a2a16a0c9c169ca36754c5f33f7c1a973b575d068f888a549ed4faefa60405160405180910390a350505050505050505050505050565b61101d611bc3565b60008281526020819052604090819020815161018081019092528054829060ff16600481111561104f5761104f611cce565b600481111561106057611060611cce565b8152815461010090046001600160a01b031660208083019190915260408051808201825260018501548152600285015481840152818401526003840154606084015260048401805482518185028101850190935280835260809094019391929091908301828280156110f157602002820191906000526020600020905b8154815260200190600101908083116110dd575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820180546111329061245d565b80601f016020809104026020016040519081016040528092919081815260200182805461115e9061245d565b80156111ab5780601f10611180576101008083540402835291602001916111ab565b820191906000526020600020905b81548152906001019060200180831161118e57829003601f168201915b5050509183525050604080516101008082018352600a85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600b860154608080850191909152600c87015460a0850152600d87015460c0850152600e87015460e08501529085019290925282519182018352600f8501805493909401939192839116600981111561125357611253611cce565b600981111561126457611264611cce565b8152602001600182015481526020016002820154815260200160038201805461128c9061245d565b80601f01602080910402602001604051908101604052809291908181526020018280546112b89061245d565b80156113055780601f106112da57610100808354040283529160200191611305565b820191906000526020600020905b8154815290600101906020018083116112e857829003601f168201915b5050509190925250505090525092915050565b600280546113259061245d565b80601f01602080910402602001604051908101604052809291908181526020018280546113519061245d565b801561139e5780601f106113735761010080835404028352916020019161139e565b820191906000526020600020905b81548152906001019060200180831161138157829003601f168201915b505050505081565b4281116113c657604051637616640160e01b815260040160405180910390fd5b6000828152602081905260409020805461010090046001600160a01b03168061140257604051634d36eb6960e01b815260040160405180910390fd5b60015460405163c1af6e0360e01b81526001600160a01b0383811660048301523360248301529091169063c1af6e0390604401602060405180830381865afa158015611452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147691906125ac565b6114935760405163f8b857d360e01b815260040160405180910390fd5b6000825460ff1660048111156114ab576114ab611cce565b141580156114cf57506003825460ff1660048111156114cc576114cc611cce565b14155b156114ed576040516307a92f1960e51b815260040160405180910390fd5b6006820183905560405183815284907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f4690602001610c25565b6000858152602081905260409020805461010090046001600160a01b031661156157604051634d36eb6960e01b815260040160405180910390fd5b6000815460ff16600481111561157957611579611cce565b14611597576040516307a92f1960e51b815260040160405180910390fd5b600354604051635c73957b60e11b81526001600160a01b039091169063b8e72af6906115cd9088908890889088906004016128a1565b60006040518083038186803b1580156115e557600080fd5b505afa1580156115f9573d6000803e3d6000fd5b506000925061160d915050838501856128d3565b600383015481519192501461163557604051630b6fac0360e41b815260040160405180910390fd5b6020810151600383015560408101516007830180546000906116589084906126cc565b909155505060608101516008830180546000906116769084906126cc565b909155505060208082015160405190815288917fd25cbd3fa66107efb1230dc4f49f939d7b6b57ba10ab0ec87ba39040c075cf20910160405180910390a250505050505050565b6116c56118cc565b6001600160a01b0381166116f457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6116fd81611927565b50565b611708611998565b6116fd816119e1565b610c45611998565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806117a057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661179460008051602061296d833981519152546001600160a01b031690565b6001600160a01b031614155b15610c455760405163703e46dd60e11b815260040160405180910390fd5b6116fd6118cc565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611820575060408051601f3d908101601f1916820190925261181d91810190612671565b60015b61184857604051634c9c8ce360e01b81526001600160a01b03831660048201526024016116eb565b60008051602061296d833981519152811461187957604051632a87526960e21b8152600481018290526024016116eb565b61038a83836119e9565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c455760405163703e46dd60e11b815260040160405180910390fd5b336118fe7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610c455760405163118cdaa760e01b81523360048201526024016116eb565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610c4557604051631afcd79f60e31b815260040160405180910390fd5b6116c5611998565b6119f282611a3f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611a375761038a8282611aa4565b610816611b1c565b806001600160a01b03163b600003611a7557604051634c9c8ce360e01b81526001600160a01b03821660048201526024016116eb565b60008051602061296d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051611ac19190612950565b600060405180830381855af49150503d8060008114611afc576040519150601f19603f3d011682016040523d82523d6000602084013e611b01565b606091505b5091509150611b11858383611b3b565b925050505b92915050565b3415610c455760405163b398979f60e01b815260040160405180910390fd5b606082611b5057611b4b82611b9a565b611b93565b8151158015611b6757506001600160a01b0384163b155b15611b9057604051639996b31560e01b81526001600160a01b03851660048201526024016116eb565b50805b9392505050565b805115611baa5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b604080516101808101909152806000815260200160006001600160a01b03168152602001611c04604051806040016040528060008152602001600081525090565b815260200160008152602001606081526020016000815260200160008152602001600081526020016000815260200160608152602001611c8c604051806101000160405280600015158152602001600015158152602001600060ff168152602001600060ff168152602001600081526020016000815260200160008152602001600081525090565b815260408051608081018252600080825260208281018290529282015260608082015291015290565b600060208284031215611cc757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60058110611cf457611cf4611cce565b9052565b60005b83811015611d13578181015183820152602001611cfb565b50506000910152565b60008151808452611d34816020860160208601611cf8565b601f01601f19169290920160200192915050565b80511515825260208101511515602083015260ff60408201511660408301526060810151611d7b606084018260ff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b60008151600a8110611dbc57611dbc611cce565b808452506020820151602084015260408201516040840152606082015160806060850152611ded6080850182611d1c565b949350505050565b611dff818d611ce4565b6001600160a01b038b166020820152611e25604082018b80518252602090810151910152565b8860808201528760a08201528660c08201528560e0820152846101008201526102606101208201526000611e5d610260830186611d1c565b611e6b610140840186611d48565b828103610240840152611e7e8185611da8565b9e9d5050505050505050505050505050565b60008083601f840112611ea257600080fd5b5081356001600160401b03811115611eb957600080fd5b602083019150836020828501011115611ed157600080fd5b9250929050565b80356001600160a01b0381168114611eef57600080fd5b919050565b60008060008060608587031215611f0a57600080fd5b84356001600160401b03811115611f2057600080fd5b611f2c87828801611e90565b9095509350611f3f905060208601611ed8565b9150611f4d60408601611ed8565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611f9657611f96611f58565b604052919050565b60008060408385031215611fb157600080fd5b611fba83611ed8565b915060208301356001600160401b03811115611fd557600080fd5b8301601f81018513611fe657600080fd5b80356001600160401b03811115611fff57611fff611f58565b612012601f8201601f1916602001611f6e565b81815286602083850101111561202757600080fd5b816020840160208301376000602083830101528093505050509250929050565b803560058110611eef57600080fd5b6000806040838503121561206957600080fd5b8235915061207960208401612047565b90509250929050565b60006080828403121561209457600080fd5b50919050565b600080604083850312156120ad57600080fd5b8235915060208301356001600160401b038111156120ca57600080fd5b6120d685828601612082565b9150509250929050565b6000610100828403121561209457600080fd5b60006040828403121561209457600080fd5b60008060008060008060008060008060006102408c8e03121561212757600080fd5b6121308c612047565b9a5060208c0135995060408c0135985061214d8d60608e016120e0565b97506101608c01356001600160401b0381111561216957600080fd5b6121758e828f01612082565b9750506101808c01356001600160401b0381111561219257600080fd5b61219e8e828f01611e90565b90975095506121b290506101a08d01611ed8565b93506101c08c013592506121ca8d6101e08e016120f3565b915060006102208d01359050809150509295989b509295989b9093969950565b600081518084526020840193506020830160005b8281101561221c5781518652602095860195909101906001016121fe565b5093949350505050565b60208152612238602082018351611ce4565b6000602083015161225460408401826001600160a01b03169052565b506040830151805160608401526020810151608084015250606083015160a0830152608083015161028060c08401526122916102a08401826121ea565b905060a084015160e084015260c084015161010084015260e0840151610120840152610100840151610140840152610120840151601f19848303016101608501526122dc8282611d1c565b9150506101408401516122f3610180850182611d48565b50610160840151838203601f1901610280850152611b118282611da8565b60008060006040848603121561232657600080fd5b8335925060208401356001600160401b0381111561234357600080fd5b8401601f8101861361235457600080fd5b80356001600160401b0381111561236a57600080fd5b8660208260051b840101111561237f57600080fd5b939660209190910195509293505050565b602081526000611b936020830184611d1c565b600080604083850312156123b657600080fd5b50508035926020909101359150565b6000806000806000606086880312156123dd57600080fd5b8535945060208601356001600160401b038111156123fa57600080fd5b61240688828901611e90565b90955093505060408601356001600160401b0381111561242557600080fd5b61243188828901611e90565b969995985093965092949392505050565b60006020828403121561245457600080fd5b611b9382611ed8565b600181811c9082168061247157607f821691505b60208210810361209457634e487b7160e01b600052602260045260246000fd5b601f82111561038a57806000526020600020601f840160051c810160208510156124b85750805b601f840160051c820191505b818110156124d857600081556001016124c4565b5050505050565b6001600160401b038311156124f6576124f6611f58565b61250a83612504835461245d565b83612491565b6000601f84116001811461253e57600085156125265750838201355b600019600387901b1c1916600186901b1783556124d8565b600083815260209020601f19861690835b8281101561256f578685013582556020948501946001909201910161254f565b508682101561258c5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b80151581146116fd57600080fd5b6000602082840312156125be57600080fd5b8151611b938161259e565b60208101611b168284611ce4565b6000808335601e198436030181126125ee57600080fd5b8301803591506001600160401b0382111561260857600080fd5b602001915036819003821315611ed157600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b84815260606020820152600061266060608301858761261d565b905082604083015295945050505050565b60006020828403121561268357600080fd5b5051919050565b60ff811681146116fd57600080fd5b6000602082840312156126ab57600080fd5b8135611b938161268a565b634e487b7160e01b600052601160045260246000fd5b80820180821115611b1657611b166126b6565b600a81106116fd57600080fd5b6000602082840312156126fe57600080fd5b8135611b93816126df565b60008135611b168161259e565b60008135611b168161268a565b813561272e8161259e565b815490151560ff1660ff199190911617815561276961274f60208401612709565b82805461ff00191691151560081b61ff0016919091179055565b61279061277860408401612716565b825462ff0000191660109190911b62ff000016178255565b6127b961279f60608401612716565b825463ff000000191660189190911b63ff00000016178255565b6080820135600182015560a0820135600282015560c0820135600382015560e090910135600490910155565b81356127f0816126df565b600a811061280057612800611cce565b815460ff191660ff9190911617815560208201356001820155604082013560028201556060820135601e193684900301811261283b57600080fd5b820180356001600160401b0381111561285357600080fd5b60208201915080360382131561286857600080fd5b6128768183600386016124df565b50505050565b600063ffffffff821663ffffffff8103612898576128986126b6565b60010192915050565b6040815260006128b560408301868861261d565b82810360208401526128c881858761261d565b979650505050505050565b6000608082840312156128e557600080fd5b82601f8301126128f457600080fd5b604051608081016001600160401b038111828210171561291657612916611f58565b60405280608084018581111561292b57600080fd5b845b8181101561294557803583526020928301920161292d565b509195945050505050565b60008251612962818460208701611cf8565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220059ec4d4c6e35de6caa4dc8d4eff546f093b8ecac1fb881f918bb9e4c82ce2f564736f6c634300081c0033";

type ProcessRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProcessRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProcessRegistry__factory extends ContractFactory {
  constructor(...args: ProcessRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ProcessRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProcessRegistry__factory {
    return super.connect(runner) as ProcessRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProcessRegistryInterface {
    return new Interface(_abi) as ProcessRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProcessRegistry {
    return new Contract(address, _abi, runner) as unknown as ProcessRegistry;
  }
}
