/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { ZKRegistry, ZKRegistryInterface } from "../../src/ZKRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DeleteAccountSIK",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sik",
        type: "bytes32",
      },
    ],
    name: "SetAccountSIK",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountSIK",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5060805161130661006d6000396000818161059e015281816105f301526107ae01526113066000f3fe6080604052600436106100915760003560e01c80638129fc1c116100595780638129fc1c146101485780638da5cb5b1461015f578063ad3cb1cc1461018a578063dc994e67146101b5578063f2fde38b146101de57610091565b806340723176146100965780634f1ef286146100ad57806352d1902d146100c9578063608e1880146100f4578063715018a614610131575b600080fd5b3480156100a257600080fd5b506100ab610207565b005b6100c760048036038101906100c29190610fdb565b61024b565b005b3480156100d557600080fd5b506100de61026a565b6040516100eb9190611050565b60405180910390f35b34801561010057600080fd5b5061011b6004803603810190610116919061106b565b61029d565b6040516101289190611050565b60405180910390f35b34801561013d57600080fd5b506101466102b5565b005b34801561015457600080fd5b5061015d6102c9565b005b34801561016b57600080fd5b5061017461045f565b60405161018191906110a7565b60405180910390f35b34801561019657600080fd5b5061019f610497565b6040516101ac9190611141565b60405180910390f35b3480156101c157600080fd5b506101dc60048036038101906101d7919061118f565b6104d0565b005b3480156101ea57600080fd5b506102056004803603810190610200919061106b565b610516565b005b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055565b61025361059c565b61025c82610682565b610266828261068d565b5050565b60006102746107ac565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60006020528060005260406000206000915090505481565b6102bd610833565b6102c760006108ba565b565b60006102d3610991565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156103215750825b9050600060018367ffffffffffffffff16148015610356575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610364575080155b1561039b576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156103eb5760018560000160086101000a81548160ff0219169083151502179055505b6103f4336109b9565b6103fc6109cd565b83156104585760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161044f9190611215565b60405180910390a15b5050505050565b60008061046a6109d7565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b61051e610833565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105905760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161058791906110a7565b60405180910390fd5b610599816108ba565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061064957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166106306109ff565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610680576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61068a610833565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156106f557506040513d601f19601f820116820180604052508101906106f29190611245565b60015b61073657816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161072d91906110a7565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461079d57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016107949190611050565b60405180910390fd5b6107a78383610a56565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610831576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61083b610ac9565b73ffffffffffffffffffffffffffffffffffffffff1661085961045f565b73ffffffffffffffffffffffffffffffffffffffff16146108b85761087c610ac9565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108af91906110a7565b60405180910390fd5b565b60006108c46109d7565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6109c1610ad1565b6109ca81610b11565b50565b6109d5610ad1565b565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6000610a2d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610b97565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a5f82610ba1565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115610abc57610ab68282610c6e565b50610ac5565b610ac4610cf2565b5b5050565b600033905090565b610ad9610d2f565b610b0f576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610b19610ad1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b8b5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b8291906110a7565b60405180910390fd5b610b94816108ba565b50565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03610bfd57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610bf491906110a7565b60405180910390fd5b80610c2a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610b97565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051610c9891906112b9565b600060405180830381855af49150503d8060008114610cd3576040519150601f19603f3d011682016040523d82523d6000602084013e610cd8565b606091505b5091509150610ce8858383610d4f565b9250505092915050565b6000341115610d2d576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000610d39610991565b60000160089054906101000a900460ff16905090565b606082610d6457610d5f82610dde565b610dd6565b60008251148015610d8c575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610dce57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610dc591906110a7565b60405180910390fd5b819050610dd7565b5b9392505050565b600081511115610df15780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6282610e37565b9050919050565b610e7281610e57565b8114610e7d57600080fd5b50565b600081359050610e8f81610e69565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ee882610e9f565b810181811067ffffffffffffffff82111715610f0757610f06610eb0565b5b80604052505050565b6000610f1a610e23565b9050610f268282610edf565b919050565b600067ffffffffffffffff821115610f4657610f45610eb0565b5b610f4f82610e9f565b9050602081019050919050565b82818337600083830152505050565b6000610f7e610f7984610f2b565b610f10565b905082815260208101848484011115610f9a57610f99610e9a565b5b610fa5848285610f5c565b509392505050565b600082601f830112610fc257610fc1610e95565b5b8135610fd2848260208601610f6b565b91505092915050565b60008060408385031215610ff257610ff1610e2d565b5b600061100085828601610e80565b925050602083013567ffffffffffffffff81111561102157611020610e32565b5b61102d85828601610fad565b9150509250929050565b6000819050919050565b61104a81611037565b82525050565b60006020820190506110656000830184611041565b92915050565b60006020828403121561108157611080610e2d565b5b600061108f84828501610e80565b91505092915050565b6110a181610e57565b82525050565b60006020820190506110bc6000830184611098565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110fc5780820151818401526020810190506110e1565b60008484015250505050565b6000611113826110c2565b61111d81856110cd565b935061112d8185602086016110de565b61113681610e9f565b840191505092915050565b6000602082019050818103600083015261115b8184611108565b905092915050565b61116c81611037565b811461117757600080fd5b50565b60008135905061118981611163565b92915050565b6000602082840312156111a5576111a4610e2d565b5b60006111b38482850161117a565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006111ff6111fa6111f5846111bc565b6111da565b6111c6565b9050919050565b61120f816111e4565b82525050565b600060208201905061122a6000830184611206565b92915050565b60008151905061123f81611163565b92915050565b60006020828403121561125b5761125a610e2d565b5b600061126984828501611230565b91505092915050565b600081519050919050565b600081905092915050565b600061129382611272565b61129d818561127d565b93506112ad8185602086016110de565b80840191505092915050565b60006112c58284611288565b91508190509291505056fea2646970667358221220729882e5a9c19d74f5d4d8d124e815b3c9a46fd631e540d0c196f7a62088269b64736f6c63430008180033";

type ZKRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKRegistry__factory extends ContractFactory {
  constructor(...args: ZKRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ZKRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZKRegistry__factory {
    return super.connect(runner) as ZKRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKRegistryInterface {
    return new Interface(_abi) as ZKRegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ZKRegistry {
    return new Contract(address, _abi, runner) as unknown as ZKRegistry;
  }
}
