/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ResultsVerifierBaseGroth16,
  ResultsVerifierBaseGroth16Interface,
} from "../../../src/verifiers/ResultsVerifierBaseGroth16";

const _abi = [
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[9]",
        name: "input",
        type: "uint256[9]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[9]",
        name: "input",
        type: "uint256[9]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type ResultsVerifierBaseGroth16ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResultsVerifierBaseGroth16ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResultsVerifierBaseGroth16__factory extends ContractFactory {
  constructor(...args: ResultsVerifierBaseGroth16ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ResultsVerifierBaseGroth16 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ResultsVerifierBaseGroth16__factory {
    return super.connect(runner) as ResultsVerifierBaseGroth16__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResultsVerifierBaseGroth16Interface {
    return new Interface(_abi) as ResultsVerifierBaseGroth16Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ResultsVerifierBaseGroth16 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ResultsVerifierBaseGroth16;
  }
}
