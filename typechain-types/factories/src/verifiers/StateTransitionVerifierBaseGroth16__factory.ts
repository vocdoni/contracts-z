/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  StateTransitionVerifierBaseGroth16,
  StateTransitionVerifierBaseGroth16Interface,
} from "../../../src/verifiers/StateTransitionVerifierBaseGroth16";

const _abi = [
  {
    inputs: [],
    name: "CommitmentInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611ada8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063b1c3a00e14610046578063d148354c14610071578063e33974a814610086575b600080fd5b61005961005436600461184f565b610099565b60405161006893929190611898565b60405180910390f35b61008461007f36600461190c565b610122565b005b610084610094366004611968565b6105c4565b6100a16117b3565b6100a96117d1565b60006100be86358760015b6020020135610b2c565b83526100dc6060870135604088013560a089013560808a0135610c21565b602085015260408401526100f660c08701358760076100b4565b606084015261010885358660016100b4565b825261011784358560016100b4565b905093509350939050565b61012a6117d1565b6040805160028082526060808301845292602083019080368337019050509050602081016040848101823750604051600080516020611a858339815191529061017f908735906020808a0135918691016119c8565b6040516020818303038152906040528051906020012060001c6101a29190611a21565b8252604080516000918782377f17f99d996509d3a1877f08a6c648707591207af6a8285e4cd07f8c5b9952fb6460408201527f099af4a793091aa57110def2ad1285be0f4059b26776f7d9bb54cdefc92388e560608201527f1016099853aa7b3e4db622c890ccf4efd8614fe255813ca2e49b7b8cf87b896160808201527f2ed40b2d824d367863f3a67e23fe38c9a8b2761298e1445211e40935985921ef60a082015260408660c08301377f1c798bca6aa96598854c891d9b4261380530942261619de249feaef8e77f91cc6101008201527f23fd4ad25d5dcd9ed55fe8559326d0afc54da78702591664bc8040a82775317a6101208201527f20e84e96fac27d035529c5d57320175ecf761b92a960ab582b7e15335e2643986101408201527f038923dd4108538532043d765d162d957ae46c2dbf7b059eea81c397ca3e47936101608201526020816101808360085afa905116905080610318576040516351d49ff760e11b815260040160405180910390fd5b60008061034f86868a6002806020026040519081016040528092919082600260200280828437600092019190915250610f18915050565b915091506040516101008a82377f0e9be5ee6f87c6535e964bef13c108b84a0921291a01dba0272c0d0811ebd4d66101008201527f035ae78bdfd140971c1d6da0597fc08b5811163a783a0cb71c7b5074387119716101208201527f0fbfb73a6e7566195ce5fc75886354712107ed83958429f178c801d4d4a82a056101408201527f04999d0dcc4affdbc549a46f70eae2971fd22af7cdba2c65ee8c78d13c8cb1e46101608201527e0ff331b9243d4d9f3c1a5debd8e2dd2add40e39d6a0204bad8f47048a77edd6101808201527f0fa0944ed513ffc15e4a8a4e5834ba43a810964ee97f88de0838c490a8b00ae66101a08201527f2e4d13d2b457ea657ab3b792edf02275a1f97b25267efc4e053a25cc60f0495c6101c08201527f0f10f2fb4d9754fba377fa460ac9e754a2d85a78e2169d6284975521f4fc4bff6101e08201527f104c8570ccfc156fcdcca39255d7d85d4dd2eb7400f8d3add325cbb7c6d2cc286102008201527f089da7b303348577700bac6953ac610cd3306efa0736c71a103b99b251d85ef961022082015282610240820152816102608201527f1b817c4559f76b5a8bbf6e4da5279448df6a2185e9c47e4de805fd095edd767f6102808201527f0c00c5314d9792b2e9cd5a49820307e3f3cfbc83a4733abbffd1c057446f2c476102a08201527f1e60d678fa467f38f26eca0769bc594e6d11294cb566482c306ef3fa80cba8a06102c08201527f115f2dbee0ffa074fa84feae3737b617d11f2b3690ce2774d70f7a29bf6bf6ed6102e08201526020816103008360085afa9051169250826105b957604051631ff3747d60e21b815260040160405180910390fd5b505050505050505050565b6105cc6117d1565b6105d46117ef565b6105dc61180d565b6105ed8660005b602002013561125d565b602084015282526000806106008761125d565b6040805160028082526060808301845294965092945091906020830190803683370190505090506020810160408881018237508451602080870151604051600080516020611a858339815191529361065d939092918691016119c8565b6040516020818303038152906040528051906020012060001c6106809190611a21565b865284518452602085810151858201527f17f99d996509d3a1877f08a6c648707591207af6a8285e4cd07f8c5b9952fb646040808701919091527f099af4a793091aa57110def2ad1285be0f4059b26776f7d9bb54cdefc92388e560608701527f1016099853aa7b3e4db622c890ccf4efd8614fe255813ca2e49b7b8cf87b896160808701527f2ed40b2d824d367863f3a67e23fe38c9a8b2761298e1445211e40935985921ef60a087015260c0860185905260e086018490527f1c798bca6aa96598854c891d9b4261380530942261619de249feaef8e77f91cc6101008701527f23fd4ad25d5dcd9ed55fe8559326d0afc54da78702591664bc8040a82775317a6101208701527f20e84e96fac27d035529c5d57320175ecf761b92a960ab582b7e15335e2643986101408701527f038923dd4108538532043d765d162d957ae46c2dbf7b059eea81c397ca3e479361016087015251600091816101808860085afa905116905080610806576040516351d49ff760e11b815260040160405180910390fd5b50505050600080610823896000600481106105e3576105e36119b2565b9092509050600080808061083f60408e013560208f0135611303565b929650909450925090506000806108578f60036105e3565b915091506000806108698e8e8e610f18565b8b8d5260208d018b905260408d0189905260608d018a905260808d0187905260a08d0188905260c08d0186905260e08d018590527f0e9be5ee6f87c6535e964bef13c108b84a0921291a01dba0272c0d0811ebd4d66101008e01527f035ae78bdfd140971c1d6da0597fc08b5811163a783a0cb71c7b5074387119716101208e01527f0fbfb73a6e7566195ce5fc75886354712107ed83958429f178c801d4d4a82a056101408e01527f04999d0dcc4affdbc549a46f70eae2971fd22af7cdba2c65ee8c78d13c8cb1e46101608e01527e0ff331b9243d4d9f3c1a5debd8e2dd2add40e39d6a0204bad8f47048a77edd6101808e01527f0fa0944ed513ffc15e4a8a4e5834ba43a810964ee97f88de0838c490a8b00ae66101a08e01527f2e4d13d2b457ea657ab3b792edf02275a1f97b25267efc4e053a25cc60f0495c6101c08e01527f0f10f2fb4d9754fba377fa460ac9e754a2d85a78e2169d6284975521f4fc4bff6101e08e01527f104c8570ccfc156fcdcca39255d7d85d4dd2eb7400f8d3add325cbb7c6d2cc286102008e01527f089da7b303348577700bac6953ac610cd3306efa0736c71a103b99b251d85ef96102208e01526102408d018290526102608d018190527f1b817c4559f76b5a8bbf6e4da5279448df6a2185e9c47e4de805fd095edd767f6102808e01527f0c00c5314d9792b2e9cd5a49820307e3f3cfbc83a4733abbffd1c057446f2c476102a08e01527f1e60d678fa467f38f26eca0769bc594e6d11294cb566482c306ef3fa80cba8a06102c08e01527f115f2dbee0ffa074fa84feae3737b617d11f2b3690ce2774d70f7a29bf6bf6ed6102e08e015290925090506000610add6117d1565b6020816103008f60085afa9150811580610af957508051600114155b15610b1757604051631ff3747d60e21b815260040160405180910390fd5b50505050505050505050505050505050505050565b6000600080516020611a6583398151915283101580610b595750600080516020611a658339815191528210155b15610b7757604051631ff3747d60e21b815260040160405180910390fd5b82158015610b83575081155b15610b9057506000610c1b565b6000610bcf600080516020611a658339815191526003600080516020611a6583398151915287600080516020611a65833981519152898a0909086114e9565b9050808303610be4575050600182901b610c1b565b610bed8161154d565b8303610c00575050600182811b17610c1b565b604051631ff3747d60e21b815260040160405180910390fd5b505b92915050565b600080600080516020611a6583398151915286101580610c4f5750600080516020611a658339815191528510155b80610c685750600080516020611a658339815191528410155b80610c815750600080516020611a658339815191528310155b15610c9f57604051631ff3747d60e21b815260040160405180910390fd5b82848688171717600003610cb857506000905080610f0f565b60008080600080516020611a65833981519152610ce46003600080516020611a65833981519152611a43565b600080516020611a658339815191528a8c090990506000600080516020611a658339815191528a600080516020611a658339815191528c8d090990506000600080516020611a658339815191528a600080516020611a658339815191528c8d09099050600080516020611a6583398151915280600080516020611a658339815191528c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089450610ddd600080516020611a6583398151915280600080516020611a658339815191528e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e7750861154d565b9350505050600080610e2e600080516020611a6583398151915280610e0457610e04611a0b565b600080516020611a65833981519152858609600080516020611a65833981519152878809086114e9565b9050610e7b600080516020611a658339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611a6583398151915284880809611566565b15915050610e8a8383836115b0565b90935091508683148015610e9d57508186145b15610ec75780610eae576000610eb1565b60025b60ff1660028a901b176000179450879350610f0b565b610ed08361154d565b87148015610ee55750610ee28261154d565b86145b15610c005780610ef6576000610ef9565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b6000806000600190506040516040810160007f1001c94d5433271edc60a846c243413ae240571dbea43a1762cc9844c3291caf83527f12d7facd78c75023648376bf93f62e2d26a8df4f07ebbf43494736a9287e6f206020840152865182526020870151602083015260408360808560065afa841693507f1b6245c2f20be71b1b97ceaa83586d36fe89ea1a1ee8f66abaeaacfbc4e6030982527f189899d667c67b9c9013672978cd595422b6bdb104f0466138c8aa97537d8a4f602083015288359050806040830152600080516020611a8583398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f22e1228889a8e26941b0acdc110dd37d97efbefa05f1f3f7e3d77921950f46dc82527f1a1fc800fc32501759f04cde450487512b6464269219e2c0c65db16500836838602083015260208901359050806040830152600080516020611a8583398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f21f3647f66bbeb662cb673b0720db4f7ab45a2e7d62328216f3ad1ea63a6c59382527f148bc83185a702d7eb99b0d703c3af85c07243e589135cf4104bb9387c6b8c78602083015260408901359050806040830152600080516020611a8583398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f25bf3f522122c0c08b21ec7bbc6ea8d8ffc50c881b2bd7595332fd590163aa7282527f1cc0556c84bb4778aa91571121d6749fbcb39bc3c27a31d8697f54a702334341602083015260608901359050806040830152600080516020611a8583398151915281108416935060408260608460075afa8416935060408360808560065afa7f1420acfedc44cc438d3ecc746e28412aaac5020284b3eb868ec669c4ccf985d483527ecab036688ad665979b2f71ca49a6e891f8e7b59b8513c2278f562a65415d3d602084015288516040808501829052600080516020611a8583398151915290911091909516169390508160608160075afa831692505060408160808360065afa815160209092015191945090925016806112545760405163a54f8e2760e01b815260040160405180910390fd5b50935093915050565b6000808260000361127357506000928392509050565b600183811c925080841614600080516020611a6583398151915283106112ac57604051631ff3747d60e21b815260040160405180910390fd5b6112e9600080516020611a658339815191526003600080516020611a6583398151915286600080516020611a6583398151915288890909086114e9565b915080156112fd576112fa8261154d565b91505b50915091565b600080808085158015611314575084155b1561132a575060009250829150819050806114e0565b600286811c94508593506001808816149080881614600080516020611a658339815191528610158061136a5750600080516020611a658339815191528510155b1561138857604051631ff3747d60e21b815260040160405180910390fd5b6000600080516020611a658339815191526113b26003600080516020611a65833981519152611a43565b600080516020611a65833981519152888a090990506000600080516020611a6583398151915288600080516020611a658339815191528a8b090990506000600080516020611a6583398151915288600080516020611a658339815191528a8b09099050600080516020611a6583398151915280600080516020611a658339815191528a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e50896506114ab600080516020611a6583398151915280600080516020611a658339815191528c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e7750861154d565b95506114b88787866115b0565b909750955084156114da576114cc8761154d565b96506114d78661154d565b95505b50505050505b92959194509250565b6000611515827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526116ee565b905081600080516020611a658339815191528283091461154857604051631ff3747d60e21b815260040160405180910390fd5b919050565b600080516020611a658339815191529081900681030690565b600080611593837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526116ee565b905082600080516020611a65833981519152828309149392505050565b600080806115e2600080516020611a6583398151915280878809600080516020611a65833981519152898a09086114e9565b905083156115f6576115f38161154d565b90505b611641600080516020611a658339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611a65833981519152848a08096114e9565b9250600080516020611a6583398151915261166d600080516020611a6583398151915260028609611753565b86099150600080516020611a6583398151915261169a600080516020611a6583398151915284850961154d565b600080516020611a6583398151915285860908861415806116d05750600080516020611a65833981519152808385096002098514155b1561125457604051631ff3747d60e21b815260040160405180910390fd5b6000806040516020815260208082015260206040820152846060820152836080820152600080516020611a6583398151915260a082015260208160c08360055afa90519250905080610c1957604051631ff3747d60e21b815260040160405180910390fd5b600061177f827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd456116ee565b9050600080516020611a6583398151915281830960011461154857604051631ff3747d60e21b815260040160405180910390fd5b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b806101008101831015610c1b57600080fd5b8060408101831015610c1b57600080fd5b6000806000610180848603121561186557600080fd5b61186f858561182c565b925061187f85610100860161183e565b915061188f85610140860161183e565b90509250925092565b60c08101818560005b60048110156118c05781518352602092830192909101906001016118a1565b505050608082018460005b60018110156118ea5781518352602092830192909101906001016118cb565b5050508260a0830152949350505050565b8060808101831015610c1b57600080fd5b600080600080610200858703121561192357600080fd5b61192d868661182c565b935061193d86610100870161183e565b925061194d86610140870161183e565b915061195d8661018087016118fb565b905092959194509250565b600080600080610140858703121561197f57600080fd5b61198986866118fb565b935060a085018681111561199c57600080fd5b60808601935035915061195d8660c087016118fb565b634e487b7160e01b600052603260045260246000fd5b83815282602082015260006040820183516020850160005b828110156119fe5781518452602093840193909101906001016119e0565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082611a3e57634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610c1b57634e487b7160e01b600052601160045260246000fdfe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122014b834bc9f82262c91a1c8bf39b9103e11c2cc851ba38def545a84a6d042a22064736f6c634300081c0033";

type StateTransitionVerifierBaseGroth16ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StateTransitionVerifierBaseGroth16ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StateTransitionVerifierBaseGroth16__factory extends ContractFactory {
  constructor(...args: StateTransitionVerifierBaseGroth16ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StateTransitionVerifierBaseGroth16 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StateTransitionVerifierBaseGroth16__factory {
    return super.connect(runner) as StateTransitionVerifierBaseGroth16__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StateTransitionVerifierBaseGroth16Interface {
    return new Interface(_abi) as StateTransitionVerifierBaseGroth16Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StateTransitionVerifierBaseGroth16 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StateTransitionVerifierBaseGroth16;
  }
}
