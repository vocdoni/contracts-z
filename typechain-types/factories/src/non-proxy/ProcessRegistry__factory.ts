/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ProcessRegistry,
  ProcessRegistryInterface,
} from "../../../src/non-proxy/ProcessRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_chainID",
        type: "string",
      },
      {
        internalType: "address",
        name: "_organizationRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "censusRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "censusURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVotes",
        type: "uint256",
      },
    ],
    name: "CensusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ProcessCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "ProcessDurationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newStateRoot",
        type: "bytes32",
      },
    ],
    name: "ProcessStateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum ProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProcessStatusChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_processID",
        type: "bytes32",
      },
    ],
    name: "endProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_processID",
        type: "bytes32",
      },
    ],
    name: "getProcess",
    outputs: [
      {
        components: [
          {
            internalType: "enum ProcessRegistry.ProcessStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "organizationId",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct ProcessRegistry.EncryptionKey",
            name: "encryptionKey",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "latestStateRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "result",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "costFromWeight",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "forceUniqueness",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "maxCount",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "costExponent",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxTotalCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minTotalCost",
                type: "uint256",
              },
            ],
            internalType: "struct ProcessRegistry.BallotMode",
            name: "ballotMode",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum ProcessRegistry.CensusOrigin",
                name: "censusOrigin",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "censusRoot",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "censusURI",
                type: "string",
              },
            ],
            internalType: "struct ProcessRegistry.Census",
            name: "census",
            type: "tuple",
          },
        ],
        internalType: "struct ProcessRegistry.Process",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ProcessRegistry.ProcessStatus",
        name: "_status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct ProcessRegistry.BallotMode",
        name: "_ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct ProcessRegistry.Census",
        name: "_census",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "_metadata",
        type: "string",
      },
      {
        internalType: "address",
        name: "_organizationID",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_processID",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ProcessRegistry.EncryptionKey",
        name: "_encryptionKey",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_initStateRoot",
        type: "bytes32",
      },
    ],
    name: "newProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "organizationRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processes",
    outputs: [
      {
        internalType: "enum ProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "latestStateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct ProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct ProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_processID",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct ProcessRegistry.Census",
        name: "_census",
        type: "tuple",
      },
    ],
    name: "setProcessCensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_processID",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setProcessDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_processID",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "_result",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "setProcessResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_processID",
        type: "bytes32",
      },
      {
        internalType: "enum ProcessRegistry.ProcessStatus",
        name: "_newStatus",
        type: "uint8",
      },
    ],
    name: "setProcessStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_processID",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "submitStateTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161296338038061296383398101604081905261002f91610094565b600261003b83826101fa565b50600180546001600160a01b0319166001600160a01b0392909216919091179055506102b8565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461008f57600080fd5b919050565b600080604083850312156100a757600080fd5b82516001600160401b038111156100bd57600080fd5b8301601f810185136100ce57600080fd5b80516001600160401b038111156100e7576100e7610062565b604051601f8201601f19908116603f011681016001600160401b038111828210171561011557610115610062565b60405281815282820160200187101561012d57600080fd5b60005b8281101561014c57602081850181015183830182015201610130565b5060006020838301015280945050505061016860208401610078565b90509250929050565b600181811c9082168061018557607f821691505b6020821081036101a557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101f557806000526020600020601f840160051c810160208510156101d25750805b601f840160051c820191505b818110156101f257600081556001016101de565b50505b505050565b81516001600160401b0381111561021357610213610062565b610227816102218454610171565b846101ab565b6020601f82116001811461025b57600083156102435750848201515b600019600385901b1c1916600184901b1784556101f2565b600084815260208120601f198516915b8281101561028b578785015182556020948501946001909201910161026b565b50848210156102a95786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b61269c806102c76000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638cafab7f116100715780638cafab7f14610164578063992bc45b1461018f578063adc879e9146101af578063b66ba6eb146101c4578063c718c01f146101d7578063ea9bcaf6146101ea57600080fd5b80630535fece146100b9578063152f3128146100ea57806325402545146100ff57806356a6f1e2146101125780636bae04ea14610125578063848df54014610138575b600080fd5b6100cc6100c7366004611a73565b6101fd565b6040516100e199989796959493929190611ba9565b60405180910390f35b6100fd6100f8366004611ce4565b610436565b005b6100fd61010d366004611dc9565b610a5c565b6100fd610120366004611e7a565b610b37565b6100fd610133366004611ea6565b610d48565b60015461014f90600160a01b900463ffffffff1681565b60405163ffffffff90911681526020016100e1565b600154610177906001600160a01b031681565b6040516001600160a01b0390911681526020016100e1565b6101a261019d366004611a73565b61102d565b6040516100e19190611f28565b6101b7611321565b6040516100e19190612004565b6100fd6101d236600461201e565b6113af565b6100fd6101e5366004612061565b611543565b6100fd6101f8366004611a73565b611755565b60006020818152918152604090819020805482518084019093526001820154835260028201549383019390935260038101546005820154600683015460078401805460ff88169761010090046001600160a01b03169695919061025f90612083565b80601f016020809104026020016040519081016040528092919081815260200182805461028b90612083565b80156102d85780601f106102ad576101008083540402835291602001916102d8565b820191906000526020600020905b8154815290600101906020018083116102bb57829003601f168201915b5050604080516101008082018352600888015460ff808216151584529181048216151560208401526201000081048216838501526301000000900481166060830152600980890154608080850191909152600a8a015460a0850152600b8a015460c0850152600c8a015460e08501528451908101909452600d8901805498999398939750939550929350849291169081111561037657610376611a8c565b600981111561038757610387611a8c565b815260200160018201548152602001600282015481526020016003820180546103af90612083565b80601f01602080910402602001604051908101604052809291908181526020018280546103db90612083565b80156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b505050505081525050905089565b600061044860608a0160408b016120c8565b60ff161161049d5760405162461bcd60e51b815260206004820152601c60248201527f4e657750726f636573733a20696e76616c6964206d6178436f756e740000000060448201526064015b60405180910390fd5b6104ad6060890160408a016120c8565b60ff168860800135116105025760405162461bcd60e51b815260206004820152601f60248201527f4e657750726f636573733a206d6178436f756e74203e206d617856616c7565006044820152606401610494565b60008b600481111561051657610516611a8c565b1480610533575060038b600481111561053157610531611a8c565b145b61057f5760405162461bcd60e51b815260206004820152601a60248201527f4e657750726f636573733a20696e76616c6964207374617475730000000000006044820152606401610494565b428a116105ce5760405162461bcd60e51b815260206004820152601d60248201527f4e657750726f636573733a20696e76616c696420737461727454696d650000006044820152606401610494565b426105d98a8c6120f9565b116106265760405162461bcd60e51b815260206004820152601c60248201527f4e657750726f636573733a20696e76616c6964206475726174696f6e000000006044820152606401610494565b60015460405163c1af6e0360e01b81526001600160a01b0386811660048301523360248301529091169063c1af6e0390604401602060405180830381865afa158015610676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069a9190612123565b6106e65760405162461bcd60e51b815260206004820181905260248201527f4e657750726f636573733a206e6f7420616e2061646d696e6973747261746f726044820152606401610494565b60008381526020819052604090205461010090046001600160a01b03161561075b5760405162461bcd60e51b815260206004820152602260248201527f4e657750726f636573733a2070726f6365737320616c72656164792065786973604482015261747360f01b6064820152608401610494565b60006040518061014001604052808d600481111561077b5761077b611a8c565b81526001600160a01b038716602082015260400161079e368690038601866121d1565b815260208082018590526040805160008082529281018252920191905081526020018c81526020018b815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610817368c90038c018c61222c565b81526020016108258a6122be565b90526000858152602081905260409020815181549293508392829060ff1916600183600481111561085857610858611a8c565b021790555060208281015182546001600160a01b0390911661010002610100600160a81b0319909116178255604083015180516001840155810151600283015560608301516003830155608083015180516108b992600485019201906118f1565b5060a0820151600582015560c0820151600682015560e082015160078201906108e290826123d9565b5061010082810151805160088401805460208401516040850151606086015161ffff1990931694151561ff001916949094179015159095029490941763ffff000019166201000060ff9384160263ff0000001916176301000000929094169190910292909217909155608081015160098084019190915560a0820151600a84015560c0820151600b84015560e090910151600c8301556101208301518051600d8401805492939092839160ff199091169060019084908111156109a7576109a7611a8c565b02179055506020820151600182015560408201516002820155606082015160038201906109d490826123d9565b505060018054600160a01b900463ffffffff1693509150601490506109f883612497565b91906101000a81548163ffffffff021916908363ffffffff16021790555050336001600160a01b0316847fada6f87a2a16a0c9c169ca36754c5f33f7c1a973b575d068f888a549ed4faefa60405160405180910390a3505050505050505050505050565b60008581526020819052604090205461010090046001600160a01b0316610a955760405162461bcd60e51b8152600401610494906124bc565b600160008681526020819052604090205460ff166004811115610aba57610aba611a8c565b14610afb5760405162461bcd60e51b8152602060048201526011602482015270141c9bd8d95cdcc81b9bdd08195b991959607a1b6044820152606401610494565b6000858152602081905260409020610b1790600401858561193c565b50505060009283525050602081905260409020805460ff19166004179055565b6001546000838152602081905260409081902054905163c1af6e0360e01b81526001600160a01b036101009092048216600482015233602482015291169063c1af6e0390604401602060405180830381865afa158015610b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf9190612123565b610c1a5760405162461bcd60e51b815260206004820152602660248201527f53657450726f636573735374617475733a206e6f7420616e2061646d696e69736044820152653a3930ba37b960d11b6064820152608401610494565b60008281526020819052604081205460ff1690816004811115610c3f57610c3f611a8c565b14158015610c5f57506003816004811115610c5c57610c5c611a8c565b14155b15610c7c5760405162461bcd60e51b8152600401610494906124e7565b806004811115610c8e57610c8e611a8c565b826004811115610ca057610ca0611a8c565b03610cdb5760405162461bcd60e51b815260206004820152600b60248201526a26bab9ba103234b33332b960a91b6044820152606401610494565b6000838152602081905260409020805483919060ff19166001836004811115610d0657610d06611a8c565b0217905550827fac0c4085a30bc70d0d8893ee5d6466ac9c5f03e27fd7292dcef128a610e7c19083604051610d3b9190612513565b60405180910390a2505050565b6001546000838152602081905260409081902054905163c1af6e0360e01b81526001600160a01b036101009092048216600482015233602482015291169063c1af6e0390604401602060405180830381865afa158015610dac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd09190612123565b610e2b5760405162461bcd60e51b815260206004820152602660248201527f53657450726f6365737343656e7375733a206e6f7420616e2061646d696e69736044820152653a3930ba37b960d11b6064820152608401610494565b6000610e3a6060830183612521565b905011610e755760405162461bcd60e51b8152602060048201526009602482015268456d7074792055524960b81b6044820152606401610494565b6040810135600003610eb65760405162461bcd60e51b815260206004820152600a602482015269115b5c1d1e481c9bdbdd60b21b6044820152606401610494565b60008281526020819052604090205461010090046001600160a01b0316610eef5760405162461bcd60e51b8152600401610494906124bc565b60008281526020819052604081205460ff166004811115610f1257610f12611a8c565b1480610f405750600360008381526020819052604090205460ff166004811115610f3e57610f3e611a8c565b145b610f5c5760405162461bcd60e51b8152600401610494906124e7565b600082815260208181526040909120600e0154908201351115610f935760008281526020818152604090912090820135600e909101555b6000828152602081905260409081902090820135600f90910155610fba6060820182612521565b600084815260208190526040902060100191610fd7919083612567565b50817f35947a8913e2156f19b018078c9f0667e49cb3dc24af3434a4d0b16b82675b1b604083013561100c6060850185612521565b85602001356040516110219493929190612626565b60405180910390a25050565b611035611977565b60008281526020819052604090819020815161014081019092528054829060ff16600481111561106757611067611a8c565b600481111561107857611078611a8c565b8152815461010090046001600160a01b0316602080830191909152604080518082018252600185015481526002850154818401528184015260038401546060840152600484018054825181850281018501909352808352608090940193919290919083018282801561110957602002820191906000526020600020905b8154815260200190600101908083116110f5575b50505050508152602001600582015481526020016006820154815260200160078201805461113690612083565b80601f016020809104026020016040519081016040528092919081815260200182805461116290612083565b80156111af5780601f10611184576101008083540402835291602001916111af565b820191906000526020600020905b81548152906001019060200180831161119257829003601f168201915b5050509183525050604080516101008082018352600885015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600980870154608080860191909152600a88015460a0860152600b88015460c0860152600c88015460e08601529186019390935283519081018452600d860180549490950194909390928492919091169081111561125c5761125c611a8c565b600981111561126d5761126d611a8c565b8152602001600182015481526020016002820154815260200160038201805461129590612083565b80601f01602080910402602001604051908101604052809291908181526020018280546112c190612083565b801561130e5780601f106112e35761010080835404028352916020019161130e565b820191906000526020600020905b8154815290600101906020018083116112f157829003601f168201915b5050509190925250505090525092915050565b6002805461132e90612083565b80601f016020809104026020016040519081016040528092919081815260200182805461135a90612083565b80156113a75780601f1061137c576101008083540402835291602001916113a7565b820191906000526020600020905b81548152906001019060200180831161138a57829003601f168201915b505050505081565b60008581526020819052604090205461010090046001600160a01b03166113e85760405162461bcd60e51b8152600401610494906124bc565b600460008681526020819052604090205460ff16600481111561140d5761140d611a8c565b1415801561143e5750600260008681526020819052604090205460ff16600481111561143b5761143b611a8c565b14155b6114a15760405162461bcd60e51b815260206004820152602e60248201527f496e76616c69642073746174757320666f72207375626d697474696e6720737460448201526d30ba32903a3930b739b4ba34b7b760911b6064820152608401610494565b60008581526020819052604090206003015484146114f45760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081bdb19081c9bdbdd60821b6044820152606401610494565b60008581526020818152604091829020600301859055905184815286917f734f931fe7a3776841211722ed18b29fc2947cc7a13e74d15fa612205c022db8910160405180910390a25050505050565b6001546000838152602081905260409081902054905163c1af6e0360e01b81526001600160a01b036101009092048216600482015233602482015291169063c1af6e0390604401602060405180830381865afa1580156115a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cb9190612123565b6116285760405162461bcd60e51b815260206004820152602860248201527f53657450726f636573734475726174696f6e3a206e6f7420616e2061646d696e60448201526734b9ba3930ba37b960c11b6064820152608401610494565b60008281526020819052604090205461010090046001600160a01b03166116615760405162461bcd60e51b8152600401610494906124bc565b60008281526020819052604081205460ff16600481111561168457611684611a8c565b14806116b25750600360008381526020819052604090205460ff1660048111156116b0576116b0611a8c565b145b6116ce5760405162461bcd60e51b8152600401610494906124e7565b4281116117105760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210323ab930ba34b7b760811b6044820152606401610494565b60008281526020818152604091829020600601839055905182815283917f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469101611021565b6001546000828152602081905260409081902054905163c1af6e0360e01b81526001600160a01b036101009092048216600482015233602482015291169063c1af6e0390604401602060405180830381865afa1580156117b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117dd9190612123565b6118295760405162461bcd60e51b815260206004820181905260248201527f656e6450726f636573733a206e6f7420616e2061646d696e6973747261746f726044820152606401610494565b60008181526020819052604081205460ff16600481111561184c5761184c611a8c565b148061187a5750600360008281526020819052604090205460ff16600481111561187857611878611a8c565b145b6118965760405162461bcd60e51b8152600401610494906124e7565b600081815260208190526040902080546001919060ff191682800217905550807fac0c4085a30bc70d0d8893ee5d6466ac9c5f03e27fd7292dcef128a610e7c19060016040516118e69190612513565b60405180910390a250565b82805482825590600052602060002090810192821561192c579160200282015b8281111561192c578251825591602001919060010190611911565b50611938929150611a5e565b5090565b82805482825590600052602060002090810192821561192c579160200282015b8281111561192c57823582559160200191906001019061195c565b604080516101408101909152806000815260200160006001600160a01b031681526020016119b8604051806040016040528060008152602001600081525090565b81526020016000801916815260200160608152602001600081526020016000815260200160608152602001611a35604051806101000160405280600015158152602001600015158152602001600060ff168152602001600060ff168152602001600081526020016000815260200160008152602001600081525090565b815260408051608081018252600080825260208281018290529282015260608082015291015290565b5b808211156119385760008155600101611a5f565b600060208284031215611a8557600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60058110611ab257611ab2611a8c565b9052565b6000815180845260005b81811015611adc57602081850181015186830182015201611ac0565b506000602082860101526020601f19601f83011685010191505092915050565b80511515825260208101511515602083015260ff60408201511660408301526060810151611b2f606084018260ff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b60008151600a8110611b7057611b70611a8c565b808452506020820151602084015260408201516040840152606082015160806060850152611ba16080850182611ab6565b949350505050565b611bb3818b611aa2565b6001600160a01b0389166020820152611bd9604082018980518252602090810151910152565b8660808201528560a08201528460c082015261022060e08201526000611c03610220830186611ab6565b611c11610100840186611afc565b828103610200840152611c248185611b5c565b9c9b505050505050505050505050565b803560058110611c4357600080fd5b919050565b60006101008284031215611c5b57600080fd5b50919050565b600060808284031215611c5b57600080fd5b60008083601f840112611c8557600080fd5b5081356001600160401b03811115611c9c57600080fd5b602083019150836020828501011115611cb457600080fd5b9250929050565b80356001600160a01b0381168114611c4357600080fd5b600060408284031215611c5b57600080fd5b60008060008060008060008060008060006102408c8e031215611d0657600080fd5b611d0f8c611c34565b9a5060208c0135995060408c01359850611d2c8d60608e01611c48565b97506101608c01356001600160401b03811115611d4857600080fd5b611d548e828f01611c61565b9750506101808c01356001600160401b03811115611d7157600080fd5b611d7d8e828f01611c73565b9097509550611d9190506101a08d01611cbb565b93506101c08c01359250611da98d6101e08e01611cd2565b915060006102208d01359050809150509295989b509295989b9093969950565b600080600080600060608688031215611de157600080fd5b8535945060208601356001600160401b03811115611dfe57600080fd5b8601601f81018813611e0f57600080fd5b80356001600160401b03811115611e2557600080fd5b8860208260051b8401011115611e3a57600080fd5b6020919091019450925060408601356001600160401b03811115611e5d57600080fd5b611e6988828901611c73565b969995985093965092949392505050565b60008060408385031215611e8d57600080fd5b82359150611e9d60208401611c34565b90509250929050565b60008060408385031215611eb957600080fd5b8235915060208301356001600160401b03811115611ed657600080fd5b611ee285828601611c61565b9150509250929050565b600081518084526020840193506020830160005b82811015611f1e578151865260209586019590910190600101611f00565b5093949350505050565b60208152611f3a602082018351611aa2565b60006020830151611f5660408401826001600160a01b03169052565b506040830151805160608401526020810151608084015250606083015160a0830152608083015161024060c0840152611f93610260840182611eec565b905060a084015160e084015260c084015161010084015260e0840151601f1984830301610120850152611fc68282611ab6565b915050610100840151611fdd610140850182611afc565b50610120840151838203601f1901610240850152611ffb8282611b5c565b95945050505050565b6020815260006120176020830184611ab6565b9392505050565b60008060008060006080868803121561203657600080fd5b85359450602086013593506040860135925060608601356001600160401b03811115611e5d57600080fd5b6000806040838503121561207457600080fd5b50508035926020909101359150565b600181811c9082168061209757607f821691505b602082108103611c5b57634e487b7160e01b600052602260045260246000fd5b803560ff81168114611c4357600080fd5b6000602082840312156120da57600080fd5b612017826120b7565b634e487b7160e01b600052601160045260246000fd5b8082018082111561210c5761210c6120e3565b92915050565b801515811461212057600080fd5b50565b60006020828403121561213557600080fd5b815161201781612112565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b038111828210171561217957612179612140565b60405290565b604051608081016001600160401b038111828210171561217957612179612140565b604051601f8201601f191681016001600160401b03811182821017156121c9576121c9612140565b604052919050565b600060408284031280156121e457600080fd5b50604080519081016001600160401b038111828210171561220757612207612140565b604052823581526020928301359281019290925250919050565b8035611c4381612112565b600061010082840312801561224057600080fd5b50600061224b612156565b833561225681612112565b815261226460208501612221565b6020820152612275604085016120b7565b6040820152612286606085016120b7565b60608201526080848101359082015260a0808501359082015260c0808501359082015260e09384013593810193909352509092915050565b6000608082360312156122d057600080fd5b6122d861217f565b8235600a81106122e757600080fd5b8152602083810135908201526040808401359082015260608301356001600160401b0381111561231657600080fd5b830136601f82011261232757600080fd5b80356001600160401b0381111561234057612340612140565b612353601f8201601f19166020016121a1565b81815236602083850101111561236857600080fd5b8160208401602083013760009181016020019190915260608301525092915050565b601f8211156123d457806000526020600020601f840160051c810160208510156123b15750805b601f840160051c820191505b818110156123d157600081556001016123bd565b50505b505050565b81516001600160401b038111156123f2576123f2612140565b612406816124008454612083565b8461238a565b6020601f82116001811461243a57600083156124225750848201515b600019600385901b1c1916600184901b1784556123d1565b600084815260208120601f198516915b8281101561246a578785015182556020948501946001909201910161244a565b50848210156124885786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600063ffffffff821663ffffffff81036124b3576124b36120e3565b60010192915050565b602080825260119082015270141c9bd8d95cdcc81b9bdd08199bdd5b99607a1b604082015260600190565b602080825260129082015271141c9bd8d95cdcc81d195c9b5a5b985d195960721b604082015260600190565b6020810161210c8284611aa2565b6000808335601e1984360301811261253857600080fd5b8301803591506001600160401b0382111561255257600080fd5b602001915036819003821315611cb457600080fd5b6001600160401b0383111561257e5761257e612140565b6125928361258c8354612083565b8361238a565b6000601f8411600181146125c657600085156125ae5750838201355b600019600387901b1c1916600186901b1783556123d1565b600083815260209020601f19861690835b828110156125f757868501358255602094850194600190920191016125d7565b50868210156126145760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b848152606060208201528260608201528284608083013760006080848301015260006080601f19601f86011683010190508260408301529594505050505056fea264697066735822122047c08bd1860c24a6219184972da238f4d2789bd6493d46ab37a9f7a561734deb64736f6c634300081c0033";

type ProcessRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProcessRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProcessRegistry__factory extends ContractFactory {
  constructor(...args: ProcessRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _chainID: string,
    _organizationRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _chainID,
      _organizationRegistry,
      overrides || {}
    );
  }
  override deploy(
    _chainID: string,
    _organizationRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _chainID,
      _organizationRegistry,
      overrides || {}
    ) as Promise<
      ProcessRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProcessRegistry__factory {
    return super.connect(runner) as ProcessRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProcessRegistryInterface {
    return new Interface(_abi) as ProcessRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProcessRegistry {
    return new Contract(address, _abi, runner) as unknown as ProcessRegistry;
  }
}
